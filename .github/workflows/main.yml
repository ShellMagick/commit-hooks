name: Run tests

on:
  push:
    branches:
    - 'main'
    - 'feature/*'
    - 'bugfix/*'
  issue_comment:
    types: [created]

jobs:
  get-main-ref:
    runs-on: ubuntu-latest
    name: Get ref to check out (based on branch or PR)
    steps:
    - name: Get PR's branch name
      id: from-pr
      if: ${{ contains(github.event.comment.html_url, '/pull/') }}
      run: |
        PR=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" ${{ github.event.issue.pull_request.url }})
        echo "branch=$(echo $PR | jq -r '.head.ref')"
    - name: Get current branch name
      id: from-branch
      if: ${{ !contains(github.event.comment.html_url, '/pull/') }}
      run: |
        echo "branch=${{ github.head_ref || github.ref_name }}"
    outputs:
      branch: ${{ steps.from-pr.outputs.branch || steps.from-branch.outputs.branch }}

  sanity-run:
    runs-on: ubuntu-latest
    name: Run tests on lowest supported Python version on Ubuntu as a sanity-check before doing anything else
    needs: get-main-ref
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.get-main-ref.outputs.branch }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - run: python -m pip install --upgrade setuptools virtualenv
    - run: pip install -r requirements-dev.txt
    - run: pytest --cov=hooks --cov-fail-under=100

  main:
    if: ${{ (github.ref == 'refs/heads/main') || (contains(github.event.comment.html_url, '/pull/') && (contains(github.event.comment.body, '/full-build') || contains(github.event.comment.body, '/mutate'))) }}
    runs-on: ubuntu-latest
    name: Run all tests, run static type analysis, coverage, and mutation tests
    needs: [get-main-ref, sanity-run]
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.get-main-ref.outputs.branch }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - run: python -m pip install --upgrade setuptools virtualenv
    - run: pip install -r requirements-dev.txt
    - run: mypy hooks
    - run: pytest --cov=hooks --cov-fail-under=100
    - run: mutmut run --paths-to-mutate "./hooks/" --use-coverage --no-progress

  combos:
    if: ${{ (github.ref == 'refs/heads/main') || (contains(github.event.comment.html_url, '/pull/') && contains(github.event.comment.body, '/full-build')) }}
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / ${{ matrix.env }}
    needs: [get-main-ref, main]
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        env: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          # exclude the sanity-run combo, no need to re-run it
          - os: ubuntu-latest
            env: '3.9'
          # exclude the main combo, no need to re-run it
          - os: ubuntu-latest
            env: '3.12'
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.get-main-ref.outputs.branch }}
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.env }}
    - run: python -m pip install --upgrade setuptools virtualenv
    - run: pip install -r requirements-dev.txt
    - run: pytest
